##########################################################################################
#                                                                                        #
#                       Pre-commit configuration file                                    #
#                                                                                        #
##########################################################################################

# See https://pre-commit.com for more information
exclude: "^docs/|/migrations/"
default_stages: [ commit ]

default_language_version:
  # default language version for each language used in the repository
  python: python3.11

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks
    
    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [ ]
  submodules: false

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # See https://pre-commit.com/hooks.html for more hooks
      - id: check-merge-conflict # checks for files that contain merge conflict strings.
        stages: [ push ]
      - id: check-executables-have-shebangs # ensures that (non-binary) executables have a shebang.
        stages: [ push ]
      - id: check-shebang-scripts-are-executable # ensures that (non-binary) files with a shebang are executable.
        stages: [ push ]
      - id: check-added-large-files # prevents giant files from being committed.
        args: [ '--maxkb=1000' ]
        stages: [ push ]
      - id: debug-statements # Check for debugger imports and py37+ `breakpoint()` calls in python source.
        stages: [ push ]
      - id: detect-private-key # Detects the presence of private keys.
        stages: [ push ]
      - id: end-of-file-fixer # Makes sure files end in a newline and only a newline.
        stages: [ push ]
      - id: check-ast  # Simply checks whether the files parse as valid python.
        stages: [ push ]
      - id: check-json # Checks json files and verifies them
        stages: [ push ]
      - id: check-yaml # Checks yaml files for parseable syntax.
        stages: [ push ]
      - id: check-toml # Attempts to load all TOML files to verify syntax.
        stages: [ push ]


  - repo: local
    hooks:

      - id: django-check
        name: django-check
        description: Check django project for potential problems
        entry: sh -c 'python manage.py check'
        types:
          - python
        pass_filenames: false
        language: system
        stages: [ push ]


      - id: django-check-migrations
        name: django-check-migrations
        description: Check django project for missing migrations.
        entry: sh -c 'python manage.py makemigrations --check --dry-run'
        files: models.py
        types:
          - python
        pass_filenames: false
        language: system
        stages: [ push ]



      - id: django-test
        name: django-test
        description: Check running tests and failure of them
        entry: sh -c 'coverage run manage.py test --noinput && coverage report --fail-under 0'
        types:
          - python
        pass_filenames: false
        language: system
        stages: [ push ]

  - repo: https://github.com/asottile/setup-cfg-fmt
    rev: "v2.2.0"
    hooks:
      - id: setup-cfg-fmt
        args: [ --include-version-classifiers, --max-py-version=3.11 ]


  - repo: https://github.com/odwyersoftware/brunette
    rev: 0.2.8
    hooks:
      - id: brunette
        args: [ --config, setup.cfg, --target-version, py310 ]


  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [ --config, setup.cfg ]


  # Python security check
  # https://bandit.readthedocs.io/en/latest/
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        stages: [ push ]
        args: [ --exclude, ./venv/, -r, -iii, -ll , . ]
        additional_dependencies: [ "bandit[toml]" ]
